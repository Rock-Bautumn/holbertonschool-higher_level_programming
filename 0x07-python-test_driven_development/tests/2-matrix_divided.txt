=======================================
= ----------------------------------- =
= - doctest for 2-matrix_divided.py - =
= ----------------------------------- =
=======================================

``matrix_divided`` returns a matrix divided by a number

=========================================
= ------------------------------------- =
= - WHAT IT TAKES TO BE A TEST PASSER - =
= ------------------------------------- =
=========================================

/-------------------\
| Prepare the test! |
\-------------------/

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

/------------------\
| Begin the tests! |
\------------------/

-------------
WORKING CASES
-------------
>>> matrix_divided([[0.33, 0.77, 1.0], [1.33, 1.67, 2.0]], 3)
[[0.11, 0.26, 0.33], [0.44, 0.56, 0.67]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[-1, -2, -3], [-4, -5, -6]], 3)
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]
>>> matrix_divided([[-1, -2, -3], [-4, -5, -6]], -3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[-1, -2, -3], [-4, -5, -6]], -3.8)
[[0.26, 0.53, 0.79], [1.05, 1.32, 1.58]]

--------------
BREAKING CASES
--------------

>>> matrix_divided([[1, 2, "hello"], [4, 5, 6]], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 3)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "some div")
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero
